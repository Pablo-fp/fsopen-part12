# todo-app/docker-compose.dev.yml
version: '3.8'

services:
  # ... (nginx service definition) ...
  nginx:
    image: nginx:stable-alpine
    container_name: todo-nginx-proxy-dev
    ports:
      - '80:80'
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - todo-dev-network

  # ... (frontend service definition) ...
  frontend:
    image: node:18-alpine
    container_name: todo-frontend-dev-top
    working_dir: /app
    environment:
      - VITE_BACKEND_URL=/api # Frontend talks to Nginx via /api
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./todo-frontend:/app
      - frontend_node_modules_dev:/app/node_modules
    command: sh -c "cd /app && npm install && npm run dev -- --host"
    networks:
      - todo-dev-network
    stdin_open: true
    tty: true

  # --- Backend Service Definition ---
  backend: # <--- Ensure this service exists
    build:
      context: ./todo-backend # Correct context
      dockerfile: dev.Dockerfile # Correct dev Dockerfile
    container_name: todo-backend-dev-top
    volumes:
      - ./todo-backend:/usr/src/app # Mount backend code
      - backend_node_modules_dev:/usr/src/app/node_modules # Isolated node_modules
    environment:
      # Use service names for internal communication
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://root:example@mongo:27017/the_database?authSource=admin
      - NODE_ENV=development
    depends_on: # Depends on databases
      - mongo
      - redis
    networks: # Connect to the shared network
      - todo-dev-network
    # No ports exposed directly to host
    stdin_open: true # Keep interactive for Nodemon
    tty: true
  # --- End of Backend Service Definition ---

  # ... (mongo service definition) ...
  mongo:
    image: mongo:latest
    container_name: todo-mongo-dev-top
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo_data_dev:/data/db
    ports:
      - '127.0.0.1:27017:27017'
    restart: unless-stopped
    networks:
      - todo-dev-network

  # ... (redis service definition) ...
  redis:
    image: redis:alpine
    container_name: todo-redis-dev-top
    volumes:
      - redis_data_dev:/data
    ports:
      - '127.0.0.1:6379:6379'
    restart: unless-stopped
    networks:
      - todo-dev-network

networks:
  todo-dev-network:
    driver: bridge

volumes:
  frontend_node_modules_dev:
  backend_node_modules_dev:
  mongo_data_dev:
  redis_data_dev:
