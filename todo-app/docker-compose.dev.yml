# todo-app/docker-compose.dev.yml
version: '3.8'

services:
  # Nginx Reverse Proxy - The ONLY exposed service
  nginx:
    image: nginx:stable-alpine
    container_name: todo-nginx-proxy-dev
    ports:
      # Map host port 8080 to container port 80 (Nginx entry point)
      - '8080:80' # Using 8080 as suggested in exercise text
    volumes:
      # Mount the custom Nginx config
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro # Read-only mount
    depends_on:
      - backend
      - frontend
    networks:
      - todo-dev-network

  # Frontend Development Service
  frontend:
    image: node:18-alpine # Base image, no separate Dockerfile needed for dev server
    container_name: todo-frontend-dev-top
    working_dir: /app
    environment:
      # --- CRUCIAL ---
      # Frontend (running in browser) talks to Nginx at /api
      - VITE_BACKEND_URL=/api
      # For file watching inside container
      - CHOKIDAR_USEPOLLING=true
    volumes:
      # Mount frontend source code for live editing
      - ./todo-frontend:/app
      # Isolate node_modules within a named volume
      - frontend_node_modules_dev:/app/node_modules
    # Ensure dependencies are installed & start Vite dev server listening on all interfaces
    command: sh -c "cd /app && npm install && npm run dev -- --host"
    networks:
      - todo-dev-network
    # NO 'ports:' section - Access is via Nginx
    stdin_open: true # Keep interactive for HMR
    tty: true

  # Backend Development Service
  backend:
    build:
      context: ./todo-backend # Use the backend directory
      dockerfile: dev.Dockerfile # Use the specific dev Dockerfile
    container_name: todo-backend-dev-top
    volumes:
      # Mount backend source code for live editing
      - ./todo-backend:/usr/src/app
      # Isolate node_modules within a named volume
      - backend_node_modules_dev:/usr/src/app/node_modules
    environment:
      # Use service names for internal communication
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://root:example@mongo:27017/the_database?authSource=admin
      - NODE_ENV=development
    depends_on:
      - mongo
      - redis
    networks:
      - todo-dev-network
    # NO 'ports:' section - Access is via Nginx
    stdin_open: true # Keep interactive for Nodemon
    tty: true

  # MongoDB Service
  mongo:
    image: mongo:latest
    container_name: todo-mongo-dev-top
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo_data_dev:/data/db # Persist data in named volume
    restart: unless-stopped
    networks:
      - todo-dev-network
    # Optional: Keep port mapping for direct host debugging
    ports:
      - '127.0.0.1:27017:27017'

  # Redis Service
  redis:
    image: redis:alpine
    container_name: todo-redis-dev-top
    volumes:
      - redis_data_dev:/data # Persist data in named volume
    restart: unless-stopped
    networks:
      - todo-dev-network
    # Optional: Keep port mapping for direct host debugging
    ports:
      - '127.0.0.1:6379:6379'

# Define the network for inter-service communication
networks:
  todo-dev-network:
    driver: bridge

# Declare named volumes used by services
volumes:
  frontend_node_modules_dev:
  backend_node_modules_dev:
  mongo_data_dev:
  redis_data_dev:
